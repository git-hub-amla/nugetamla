
name: Validate Znode10 Package Versions

on:
  pull_request:
    branches:
      - qa
      - master
      - dev

jobs:
  validate_packages:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Find csproj files in the pull request
        run: |
          # Find all csproj files modified in the PR
          git diff --name-only origin/${{ github.base_ref }}..origin/${{ github.head_ref }} | grep '\.csproj$' > csproj_files.txt

      - name: Validate Znode10 package versions
        run: |
          # Define patterns based on branch
          if [[ "${{ github.ref }}" == "refs/heads/qa" ]]; then
            version_pattern="-qa"
          elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            version_pattern="^[0-9]+\.[0-9]+\.[0-9]+$"
          elif [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            version_pattern="-dev"
          fi

          # Loop through each csproj file and validate package versions
          while IFS= read -r csproj_file; do
            echo "Validating $csproj_file..."
            if grep -q '<PackageReference Include="Znode10' "$csproj_file"; then
              # Extract package references with Znode10
              grep '<PackageReference Include="Znode10' "$csproj_file" | while IFS= read -r package_line; do
                # Extract the version part from the package reference
                version=$(echo "$package_line" | sed -n 's/.*Version="\([^"]*\)".*/\1/p')

                # Check if version matches the expected pattern
                if [[ ! "$version" =~ $version_pattern ]]; then
                  echo "Invalid package version in $csproj_file: $package_line"
                  exit 1
                fi
              done
            fi
          done < csproj_files.txt
        shell: bash

      - name: Fail if validation fails
        if: failure()
        run: |
          echo "Package version validation failed. Ensure the correct version tags are applied."
          exit 1
